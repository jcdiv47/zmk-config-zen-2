/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define NUM 1
#define NAV 2
#define ADJUST 3
#define LOCK 4

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        // combo for delete
        combo_del {
            bindings = <&kp DEL>;
            key-positions = <24 39>;
            layers = <0>;
            timeout-ms = <50>;
        };

        // combo for forward slash
        combo_fslh {
            bindings = <&kp FSLH>;
            key-positions = <3 16>;
            layers = <NUM>;
            timeout-ms = <50>;
        };

        combo_bslh {
            bindings = <&kp BSLH>;
            key-positions = <8 19>;
            layers = <NUM>;
            timeout-ms = <50>;
        };

        // combo for typing brackets []
        combo_brackets {
            // 可以用CMD+这个单手返回到代码上一个编辑的地方 或者网页返回
            bindings = <&mt RBKT LBKT>; // CMD+[
            key-positions = <3 4>; // ER
            layers = <NUM>;
            timeout-ms = <50>;
        };

        // combo for typing parenthesis ()
        combo_parenthesis {
            bindings = <&mt RPAR LPAR>;
            key-positions = <15 16>; // DF
            layers = <NUM>;
            timeout-ms = <50>;
        };

        // combo for typing braces {}
        combo_braces {
            bindings = <&mt RBRC LBRC>;
            key-positions = <27 28>; // CV
            layers = <NUM>;
            timeout-ms = <50>;
        };

        // combo for momentarily go to layer ADJUST
        combo_mo_adjust {
            bindings = <&mo ADJUST>;
            key-positions = <36 41>;
            timeout-ms = <100>;
        };
        // combo for toggle layer LOCK
        combo_tog_layer_lock {
            bindings = <&tog LOCK>;
            key-positions = <0 5 38>;
            timeout-ms = <100>;
        };
    };

    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp LEFT_SHIFT>, <&kp LC(SPACE)>;
        };

        mtt: mtt {
            compatible = "zmk,behavior-hold-tap";
            label = "MTT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        ltt: ltt {
            compatible = "zmk,behavior-hold-tap";
            label = "LTT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            display-name = "QWERTY";
            bindings = <
&kp TAB      &kp Q  &kp W  &kp E   &kp R  &kp T      &kp Y  &kp U          &kp I      &kp O    &kp P      &lt ADJUST SQT
&lt NAV ESC  &kp A  &kp S  &kp D   &kp F  &kp G      &kp H  &kp J          &kp K      &kp L    &kp SEMI   &kp SQT
&td0         &kp Z  &kp X  &kp C   &kp V  &kp B      &kp N  &mtt C_MUTE M  &kp COMMA  &kp DOT  &kp MINUS  &kp EQUAL
            &kp LCTRL  &kp LALT  &mt LCMD SPACE      &kp RET  &kp BSPC  &mo NUM
            >;
        };

        num {
            display-name = "NUMSYM"; // numbers and symbols
            bindings = <
&kp TILDE  &kp EXCL   &kp AT   &kp HASH  &kp DLLR  &kp PRCNT        &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &none
&kp GRAVE  &kp N1     &kp N2   &kp N3    &kp N4       &kp N5        &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp BSPC
&kp LSHFT  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH  &kp EQUAL        &trans     &trans    &trans     &trans    &trans    &kp RET
                                &none  &kp LEFT_GUI  &kp DEL        &trans  &trans  &trans
            >;
        };

        nav {
            display-name = "NAVIGATE";
            bindings = <
&trans  &trans     &trans    &trans    &trans     &kp INS        &kp HOME  &none     &kp UP    &none      &none   &none
&trans  &kp LCTRL  &kp LALT  &kp LCMD  &kp LSHFT  &kp DEL        &kp END   &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &none
&trans  &trans     &trans    &trans    &trans      &trans        &none     &none     &none     &none      &none   &none
                                   &trans  &trans  &trans        &trans  &trans    &trans
            >;
        };

        adjust {
            display-name = "ADJUST";
            bindings = <
&none  &kp C_BRI_DN     &kp C_BRI_UP     &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &rgb_ug RGB_TOG        &none  &none  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &none
&none  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &ext_power EP_TOG        &none  &none  &none         &none         &none       &none
&none  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3          &bt BT_SEL 4        &none  &sys_reset   &bootloader  &bt BT_CLR_ALL  &none &none
                                                                         &none  &none  &none        &none  &none  &none
            >;
        };

        lock {
            display-name = "LOCK";
            bindings = <
&none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none        &none  &none  &none  &none  &none  &none
                     &none  &none  &none        &none  &none  &none
            >;
        };
    };
};
